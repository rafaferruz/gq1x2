Herramientas de desarrollo.

Lenguaje de programacion Java en su version JDK7

El lenguaje de programacion es Java, teniendo instalado el Java Development Kit version 7.
La version actual es la jdk1.7.0_25.
El directorio de instalacion es /home/rafa/jdk1.7.0_25
El JRE (Java Runtime Environment) se encuentra en la carpeta /home/rafa/jdk1.7.0_25/jre. Esta subcarpeta es importante conocerla puesto que algunas aplicaciones pueden necesitarla en su configuracion.


Entorno de Desarrollo Netbeans 7.3.1

Este IDE ha sido instalado juntamente con el paquete JDK7.
Para poder realizar el desarrollo de la aplicacion GQ1X2 se han tenido que realizar unas determinadas operaciones de configuracion de Netbeans.
Definicion de la plataforma de desarrollo Java. Ir a 'Tools/Java Platforms'. En este caso es JDK7 y buscar el directorio de instalacion. Si se cambia la version de JDK se deberia crear una nueva plataforma o instalarlo en un directorio de nombre mas generico sobreescribiendo la version anterior.
Definicion del servidor de aplicaciones a utilizar. En nuestro caso, se ha instalado Tomcat 7. Para definir un servidor de aplicaciones o modificar la configuracion hay que ir a 'Window/Servides'; en 'Servers' se debe añadir un servidor. Para instalar Tomcat, las ventanas de creacion solicitan el directorio donde se encuentra instalado el servidor y piden un nombre de usuario y contraseña como Manager del servidor.
Definicion de la base de datos a utilizar. Se requiere tener instalado previamente el driver para el tipo de base de datos que queremos utilizar. Netbeans ya tiene preinstalado el driver para, entre otros, MySql 5.1. Solamente queda crear una nueva conexion a nuestra base de datos pulsando boton derecho sobre el titulo 'Databases' en la ventana 'Services'.

Servidor de Aplicaciones Tomcat 7

Se encuentra instalado en el directorio '/home/rafa' siguiendo el procedimiento de instalacion indicado en el manual oficial de Tomcat. No se ha modificado su configuracion basica de instalacion

Servidor de Base de Datos MySql 5.5
    Arrancar servidor de Mysql en el arranque del sistema
		Se ha copiado mysql.server script al directorio /etc/init.d y el fichero de configuracion my.cnf al directorio /etc


Frameworks de ayuda a la programacion
    Java Server Faces JSF
    YAML
    Log4j2
	Se ha instalado la version 2 de log4j que ya viene con Netbeans 7.3 y eliminar toda referencia en la programacion a la version 1.2 anterior.
	El uso de esta libreria de ayuda a los procesos de logging se implementa inicialmente solo en las clases del paquete DAO para el seguimiento de los errores en el acceso a la base de datos.


Otras Herramientas Auxiliares
    Filezilla
    SVN
	El servidor de svn se encuentra ubicado en code.google.com.
	El nombre del proyecto en el servidor svn es 'gq1x2'.
	El usuario administrador del projecto en el servidor svn es 'rafaferruz@hotmail.com'.
	Las contraseñas del administrador del proyecto y de ejecucion de commits del proyecto por parte de dicho administrador son responsabilidad de dicho usuario y debe ser guardadas en un sitio seguro.


Aplicacion GQ1X2

Objetivos de la aplicacion

GQ1X2 pretende mantener una base de datos con los resultados de futbol de primera y segunda division del futbol español y obtener, desde dichos resultados una serie de datos estadisticos que mejoren los pronosticos que se realicen sobre resultados futuros.
Por ello, la aplicacion proporciona vistas de listas y de mantenimiento de los diferentes objetos que intervienen en la aplicacion( temporadas, equipos, resultados, etc.), procesos de importacion masiva de equipos y resultados desde otras bases de datos, procesos de generacion de clasificaciones, de resumenes estadisticos, de propuestas de pronosticos y de desarrollo combinatorio sobre dichos pronosticos.


RoadMap de Desarrollo de la aplicacion

- Completar hasta impresion de apuestas

Tareas en Curso

- Incluir en clases log4j 2
- PENDIENTE DE ASIGNAR

Lista de Errores detectados a corregir

- En las vistas de mantenimiento de tablas el boton 'Cancelar' no realiza ninguna funcion. 
- En las vistas de listas de tablas no funciona el boton 'Editar'. 

Lista de Tareas Pendientes

- En las vistas de mantenimiento de tablas no funciona el boton 'Buscar/Seleccionar'. 
- En las vistas de mantenimiento de tablas, en los mensajes de error de validacion o conversion, se debe modificar el identificador del campo y poner su texto de etiqueta. 
- Estudio del funcionamiento de caracteres 'UTF-8' en la base de datos y en la aplicacion.
- Limpiar clases DAO de metodos innecesarios (no utilizados)


Lista de Tareas Realizadas

17/10/2013 - Añadir anotaciones a los servlets de la aplicacion. 
		Probado correcto el servlet de Importacion de resultados con anotaciones
18/10/2013 - Añadir 'Validator' para numeros enteros y eliminar javascript que realiza dicha funcion.
		Se han modificado las vistas y las clases ManagedBeans para las tablas 'championship' y 'teams'.
18/10/2013 - Cambiar caracteres a UTF-8 en todos los ficheros de la aplicacion
		Se han sustituido todas las referencias a la codificacion ISO-8891-1 poniendo 'UTF-8'
20/10/2013 - En la vista 'ShowScores' el boton 'Mostrar resultados' deja siempre la ronda '1' activa
		Se han corregido errores en la presentacion de las listas y se ha refactorizado la clase ShowScoresBean para atomizar las tareas de diferentes metodos.
21/10/2013 - Implementar la creacion de las tablas de equipos inscritos en campeonatos en el proceso de 'Importacion de Resultados'
		Se han implementado los metodos necesarios para la creacion de equipos inscritos desde la importacion de datos de la BD 'granq'.
22/10/2013 - Desarrollo del proceso de 'Inscripcion de Equipos'
		Se han desarrollado las clases necesarias y el fichero xhtml  de vista para el mantenimiento de la tabla de 'Equipos Inscritos'
25/10/2013 - Implementar la lectura de equipos desde las tablas de inscripcion de equipos en vista 'showScores'.
		La lista de equipos de una jornada o ronda determinada se realiza desde la tabla de 'Equipos Inscritos' (enrolledTeams)
	   - Implementar la entrada de nuevos resultados en vista 'showScores'
		La vista 'showScores' se ha dividido en dos procesos: Uno de ellos se encarga de la tarea de visualizacion y edicion de resultados (showScores) y el otro proceso y su vista correspondiente se encarga de crear nuevos partidos en nuevas jornadas (createMatches).
25/10/2013 - En 'createMatches' se debe añadir una columna de checkboxes para seleccionar partidos que se deseen 'Eliminar'.
		Se ha implementado la eliminacion de partidos en vista 'createMatches' mediante una columna de checkboxes y un boton de accion 'Eliminar partidos'
26/10/2013 - Implementar en ficheros XHTML el acceso a los Web Resources
		Se han modificado los accesos a recursos css y javascript adaptandolos a sistema de Resources de JSF.
01/11/2013 - Implementar la generacion de clasificaciones en vista 'showScores'
		Implementar clases 'Classification.java', 'ClassificationDAO.java', 'Rating4.java', 'Rating4DAO.java', 
		    'Rating4Service.java', 'MakeClassification.java, 'ClassificationWonDrawnLost.java', 
		    'ClassificationWonDrawnLostDAO.java','ClassificationWDLService.java', 
		    'MakeSuperTable.java', 'SupertableDAO.java', 'SuperTable.java',
		    'Prognostic.java', 'MakePrognostics.java', 'PrognosticsDAO.java'
02/11/2013 - Incluir en clases org.apache.log4j
		Se ha iniciado el estudio de log4j2 y su implementacion en clases DAO. Se debe continuar su estudio hasta que se obtengan los ficheros de logging necesarios.
03/11/2013 - Finalizar depuracion de showScores
		La vista 'showScores' queda finalizada incluida la 'Generacion de clasificaciones'. Falta comprobar si la generacion de clasificaciones realiza los calculos correctamente.
03/11/2013 - Crear clases de servicio de los objetos de la base de datos.
		Se han creado las clases de servicio para los objetos Championship, Team y Score y se han modificado las clases DAO y las clases Bean correspondientes a dichos objetos.
03/11/2013 - Implementar la vista 'showClasif'
		Se han implementado las clases necesarias para mostrar la clasificacion del campeonato.
04/11/2013 - Implementar clases de Generacion de Clasificaciones
		Se han implementado y refactorizado las clases y scripts 'generateClassifications.xhtml', 'GenerateClassificationBean.java'
		    y 'MakeClassification.java'.
05/11/2013 - Implementar clases de Generacion de SuperTable
		Se han implementado y refactorizado las clases y scripts 'generateSuperTable.xhtml', 'GenerateSuperTableBean.java'
		    y 'MakeSuperTable.java'.
05/11/2013 - Implementar clases de Generacion de Prognostic
		Se han implementado y refactorizado las clases y scripts 'generatePrognostic.xhtml', 'GeneratePrognosticBean.java'
		    y 'MakePrognostic.java'.
07/11/2013 - Implementar clases de Creacion de PreQuinielas
		Se han implementado y refactorizado las clases y scripts 'prePool.xhtml', 'PrePool.java', 'PrePoolService.java', 'PrePoolDAO.java',
		    'PrePoolBean.java'.
09/11/2013 - Implementar clases y scripts de Estadisticas de PreQuiniela
		Se han implementado y refactorizado las clases y scripts 'statPrognostics.xhtml', 'MatchBean.java', 'StatBean.java',
		    'StatPrognosticBean.java'
12/11/2013 - Implementar clases y scripts de Creacion de Apuestas
		Se han implementado y refactorizado las clases y scripts 'bets.xhtml', 'Bet.java', 'BetDAO.java',
		    'BetBean.java', 'BetService.java', 'BetGroupBean.java', 'BetLineBean.java'
14/11/2013 - Implementar clases y scripts de Gestion de Columnas
		Se han implementado y refactorizado las clases y scripts 'columns.xhtml', 'BetBean.java', 'BetDAO.java',
		    'ColumnsBean.java'. La clase BetBean se ha hecho extends de Bet y ColumnsBean se ha hecho extends de BetBean.
		    Esto ha supuesto una gran reduccion de codigo por la comparticion de variables y de metodos.
19/11/2013 - Arrancar servidor de Mysql en el arranque del sistema
		Se ha copiado mysql.server script al directorio /etc/init.d y el fichero de configuracion my.cnf al directorio /etc.
20/11/2013 - Incorporacion del proyecto 'gq1x2' al servidor svn 'code.google.com' para la gestion de versiones del mismo.
26/11/2013 - Modificacion de la ubicacion de textos internacionalizados para su distribucion en ficheros 'properties' mas pequeños
		y separados por objetos y pantallas a los que se aplican.
02/12/2013 - Modificar estilos CSS para reducir el tamaño de letra, centrar vista en pantalla, etc., en definitiva, conseguir el estilo anterior a la incorporacion de Web Resources
		Se modificaron las llamadas a los ficheros de estilo CSS y se volvio al estilo ya definido anteriormente. (Ver notas sobre implementacion de JSF 2.2)

Estudiar:
- JSF 2.2
    - Utilizacion de Resources para la ubicacion de los ficheros de estilos CSS.
	- Se siguen las indicaciones de la documentacion de Java EE 7.
	    - Se encuentran problemas cuando se usa un fichero css que intenta importar otros ficheros css con la directiva @import.
	    - Se resuelven los problemas cuando se llaman a dichos ficheros directamente usando una etiqueta h:outputStylesheet para cada uno de los ficheros utilizados.
    - Creacion de Componentes Compuestos.
	- Se encuentran problemas si se siguen las indicaciones de la documentacion de Java EE 7.
	- Se resuelven algunos de dichos problemas si se suprime del fichero de declaracion e implementacion del componente compuesto
	    el bloque compuesto por las etiquetas <head></head>
	- Se mantiene un problema al intentar usar un metodo de la clase Bean que actua como listener del evento ChangeValueEvent.    
	    
- CSS
- Repasar J2EE (session, JSP, Tags)
    - Revisar de vez en cuando:
	Web Resources
	Relocatable Resources
	Resource library contracts
	HTML5 friendly markup